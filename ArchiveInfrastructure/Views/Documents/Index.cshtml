@model IEnumerable<ArchiveDomain.Model.Document>

@{
    ViewData["Title"] = "Список документів";
}

<h1 class="mb-4">Список документів</h1>

@if (ViewBag.FilterType != null)
{
    <h3>@ViewBag.FilterType: @ViewBag.FilterValue</h3>
}

<div class="row mb-4">
    <div class="col-12">
        <div class="bg-white p-4 rounded shadow">
            <h4 class="mb-4">Пошук та фільтрація документів</h4>
            <form asp-action="Index" method="get">
                <div class="row">
                    <div class="col-md-6 mb-3">
                        <label>Назва</label>
                        <input type="text" name="title" class="form-control" value="@Context.Request.Query["title"]" />
                    </div>
                    <div class="col-md-6 mb-3">
                        <label>Мова</label>
                        <input type="text" name="language" class="form-control" value="@Context.Request.Query["language"]" />
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-6 mb-3">
                        <label>Тип документа</label>
                        <select name="typeId" class="form-control">
                            <option value="">Всі</option>
                            @foreach (var type in ViewBag.DocumentTypes as List<ArchiveDomain.Model.DocumentType> ?? new())
                            {
                                <option value="@type.Id" selected="@(type.Id.ToString() == Context.Request.Query["typeId"] ? "selected" : null)">
                                    @type.Name
                                </option>
                            }
                        </select>
                    </div>
                    <div class="col-md-6 mb-3">
                        <label>Категорія</label>
                        <select name="categoryId" class="form-control">
                            <option value="">Всі</option>
                            @foreach (var category in ViewBag.Categories as List<ArchiveDomain.Model.Category> ?? new())
                            {
                                <option value="@category.Id" selected="@(category.Id.ToString() == Context.Request.Query["categoryId"] ? "selected" : null)">
                                    @category.Name
                                </option>
                            }
                        </select>
                    </div>
                </div>

                <div class="row align-items-end">
                    <div class="col-md-6 mb-3">
                        <label>Автор</label>
                        <select name="authorId" class="form-control">
                            <option value="">Всі</option>
                            @foreach (var author in ViewBag.Authors as List<ArchiveDomain.Model.Author> ?? new())
                            {
                                <option value="@author.Id" selected="@(author.Id.ToString() == Context.Request.Query["authorId"] ? "selected" : null)">
                                    @author.Name
                                </option>
                            }
                        </select>
                    </div>
                    <div class="col-md-6 mb-3 d-flex gap-2">
                        <button type="submit" class="btn btn-primary btn-animated mt-auto">Пошук</button>
                        <a asp-action="Index" class="btn btn-secondary btn-animated mt-auto">Скинути</a>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Кнопки: тільки для admin -->
@if (User.IsInRole("admin"))
{
    <a class="btn btn-primary btn-animated mb-3" asp-controller="Documents" asp-action="Import">Завантажити з файлу</a>
    <a class="btn btn-primary btn-animated mb-3" asp-controller="Documents" asp-action="Export">Експортувати у файл</a>
    <p>
        <a asp-action="Create">Додати новий документ</a>
    </p>
}

<div class="bg-white blur-box p-4 rounded shadow">
<table class="table table-bordered">
    <thead>
        <tr>
            <th>@Html.DisplayNameFor(model => model.Title)</th>
            <th>@Html.DisplayNameFor(model => model.PublicationDate)</th>
            <th>@Html.DisplayNameFor(model => model.Language)</th>
            <th>@Html.DisplayNameFor(model => model.Quantity)</th>
            <th>Тип документа</th>
            <th class="actions-column">Дії</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.Title)</td>
                <td>@Html.DisplayFor(modelItem => item.PublicationDate)</td>
                <td>@Html.DisplayFor(modelItem => item.Language)</td>
                <td>@Html.DisplayFor(modelItem => item.Quantity)</td>
                <td>@(item.Type != null ? item.Type.Name : "Без типу")</td>
                    <td class="actions-column">
                        @if (User.IsInRole("admin"))
                        {
                            <a asp-action="Edit" asp-route-id="@item.Id">Редагувати</a>
                            <span class="mx-2">|</span>
                            <a asp-action="Details" asp-route-id="@item.Id">Деталі</a>
                            <span class="mx-2">|</span>
                            <a asp-action="Delete" asp-route-id="@item.Id">Видалити</a>
                        }
                        else if (User.IsInRole("user"))
                        {
                            <a asp-action="Details" asp-route-id="@item.Id">Деталі</a>
                            <span class="mx-2">|</span>

                            var now = DateTime.Now;

                            var availableInstance = item.DocumentInstances?
                            .Where(instance =>
                            instance.Available &&
                            (instance.State == "Придатний" || instance.State == "Новий") &&
                            instance.ReservationDocuments.All(rd =>
                            rd.Reservation.ReservationEndDateTime <= now ||
                            rd.Reservation.ReservationStartDateTime >= now
                            )
                            )
                            .FirstOrDefault();

                            if (availableInstance != null)
                            {
                                <a asp-controller="Reservations"
                                   asp-action="Create"
                                   asp-route-documentInstanceId="@availableInstance.Id"
                                   class="btn btn-primary btn-animated w-auto">
                                    Забронювати
                                </a>
                            }
                            else
                            {
                                <span class="text-muted ms-2">Недоступний</span>
                            }
                        }

                    </td>
            </tr>
        }
    </tbody>
</table>
</div>

@section Scripts
{
    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
    <script type="text/javascript">
        google.charts.load('current', { 'packages': ['corechart'] });
        google.charts.setOnLoadCallback(drawDocumentLanguagesChart);

        function drawDocumentLanguagesChart() {
            fetch('/api/charts/countByLanguage')
                .then(response => {
                    if (!response.ok) {
                        throw new Error(`HTTP error! Status: ${response.status}`);
                    }
                    return response.json();
                })
                .then(data => {
                    if (!data.length) {
                        console.error("Помилка: API повернуло порожні дані.");
                        return;
                    }

                    const dataTable = new google.visualization.DataTable();
                    dataTable.addColumn('string', 'Мова');
                    dataTable.addColumn('number', 'Кількість');

                    data.forEach(item => {
                        dataTable.addRow([item.language, item.count]);
                    });

                    const options = {
                        title: 'Документи за мовами',
                        width: '100%',
                        height: 300,
                        chartArea: { width: '70%' },
                        hAxis: { title: 'Мова' },
                        vAxis: { title: 'Кількість' },
                        legend: { position: 'none' },
                        bar: { groupWidth: '70%' },
                        colors: ['#993300'],
                    };

                    const chart = new google.visualization.ColumnChart(document.getElementById('documentsByLanguageChart'));
                    chart.draw(dataTable, options);
                })
                .catch(error => console.error('Помилка запиту:', error));
        }
    </script>
}
