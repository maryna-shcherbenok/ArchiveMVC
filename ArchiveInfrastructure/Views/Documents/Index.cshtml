@model IEnumerable<ArchiveDomain.Model.Document>

@{
    ViewData["Title"] = "Список документів";
}

<h1 class="text-center mb-4">Список документів</h1>

@if (ViewBag.FilterType != null)
{
    <h3>@ViewBag.FilterType: @ViewBag.FilterValue</h3>
}

<div class="row mb-4">
    <div class="col-12">
        <div class="bg-white p-4 rounded shadow">
            <h4 class="text-center mb-4">Пошук та фільтрація документів</h4>
            <form asp-action="Index" method="get">
                <div class="row">
                    <div class="col-md-6 mb-3">
                        <label>Назва</label>
                        <input type="text" name="title" class="form-control" value="@Context.Request.Query["title"]" />
                    </div>
                    <div class="col-md-6 mb-3">
                        <label>Мова</label>
                        <input type="text" name="language" class="form-control" value="@Context.Request.Query["language"]" />
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-6 mb-3">
                        <label>Тип документа</label>
                        <select name="typeId" class="form-control">
                            <option value="">Всі</option>
                            @foreach (var type in ViewBag.DocumentTypes as List<ArchiveDomain.Model.DocumentType> ?? new())
                            {
                                <option value="@type.Id" selected="@(type.Id.ToString() == Context.Request.Query["typeId"] ? "selected" : null)">
                                    @type.Name
                                </option>
                            }
                        </select>
                    </div>
                    <div class="col-md-6 mb-3">
                        <label>Категорія</label>
                        <select name="categoryId" class="form-control">
                            <option value="">Всі</option>
                            @foreach (var category in ViewBag.Categories as List<ArchiveDomain.Model.Category> ?? new())
                            {
                                <option value="@category.Id" selected="@(category.Id.ToString() == Context.Request.Query["categoryId"] ? "selected" : null)">
                                    @category.Name
                                </option>
                            }
                        </select>
                    </div>
                </div>

                <div class="row align-items-end">
                    <div class="col-md-6 mb-3">
                        <label>Автор</label>
                        <select name="authorId" class="form-control">
                            <option value="">Всі</option>
                            @foreach (var author in ViewBag.Authors as List<ArchiveDomain.Model.Author> ?? new())
                            {
                                <option value="@author.Id" selected="@(author.Id.ToString() == Context.Request.Query["authorId"] ? "selected" : null)">
                                    @author.Name
                                </option>
                            }
                        </select>
                    </div>
                    <div class="col-md-6 mb-3 d-flex gap-2">
                        <button type="submit" class="btn btn-outline-danger btn-animated mt-auto">Пошук</button>
                        <a asp-action="Index" class="btn btn-outline-primary btn-animated mt-auto">Скинути</a>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Кнопки: тільки для admin -->
@if (User.IsInRole("admin"))
{
    <a class="btn btn-outline-danger btn-animated mb-3" asp-controller="Documents" asp-action="Import">Завантажити з файлу</a>
    <a class="btn btn-outline-danger btn-animated mb-3" asp-controller="Documents" asp-action="Export">Експортувати у файл</a>
    <p>
        <a asp-action="Create" class="btn btn-outline-primary btn-animated btn-sm">Додати новий документ</a>
    </p>
}

<div class="bg-white blur-box p-4 rounded shadow">
    <div class="list-group">
        @foreach (var item in Model)
        {
            var collapseId = $"collapse-info-{item.Id}";
            <div class="list-group-item d-flex justify-content-between align-items-start flex-column gap-2 shadow-sm rounded border-0 document-card-horizontal">

                <!-- Верхня частина -->
                <div class="w-100 d-flex justify-content-between align-items-center flex-wrap gap-3">
                    <div class="flex-grow-1">
                        <h5 class="mb-1">@item.Title</h5>
                        <p class="mb-1 text-muted">Тип: @(item.Type?.Name ?? "Без типу")</p>
                        <div class="small text-secondary">
                            <span><strong>Дата публікації:</strong> @item.PublicationDate</span> |
                            <span><strong>Мова:</strong> @item.Language</span> |
                            <span><strong>Кількість:</strong> @item.Quantity</span>
                        </div>
                    </div>

                    <div class="text-end d-flex flex-wrap gap-2 align-items-center justify-content-end">
                        <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-outline-secondary btn-sm">Деталі</a>

                        @if (User.IsInRole("admin"))
                        {
                            <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-outline-primary btn-sm">Редагувати</a>
                            <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-outline-danger btn-sm">Видалити</a>
                        }
                        else if (User.IsInRole("user"))
                        {
                            var now = DateTime.Now;
                            var availableInstance = item.DocumentInstances?
                            .Where(instance =>
                            instance.Available &&
                            (instance.State == "Придатний" || instance.State == "Новий") &&
                            instance.ReservationDocuments.All(rd =>
                            rd.Reservation.ReservationEndDateTime <= now ||
                            rd.Reservation.ReservationStartDateTime >= now
                            )
                            )
                            .FirstOrDefault();

                            if (availableInstance != null)
                            {
                                <a asp-controller="Reservations"
                                   asp-action="Create"
                                   asp-route-documentInstanceId="@availableInstance.Id"
                                   class="btn btn-outline-danger btn-sm">
                                    Забронювати
                                </a>
                            }
                            else
                            {
                                <span class="text-muted small">Недоступний</span>
                            }
                        }
                    </div>
                </div>

                <!-- Кнопка "Показати опис" -->
                @if (!string.IsNullOrWhiteSpace(item.Info))
                {
                    <button class="btn btn-sm btn-link px-0" type="button"
                            data-bs-toggle="collapse" data-bs-target="#@collapseId"
                            aria-expanded="false" aria-controls="@collapseId">
                        📄 Показати опис
                    </button>

                    <div class="collapse w-100 mt-2" id="@collapseId">
                        <div class="card card-body bg-light border-0 fst-italic">
                            @item.Info
                        </div>
                    </div>
                }
            </div>
        }
    </div>
</div>


@section Scripts
{
    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
    <script type="text/javascript">
        google.charts.load('current', { 'packages': ['corechart'] });
        google.charts.setOnLoadCallback(drawDocumentLanguagesChart);

        function drawDocumentLanguagesChart() {
            fetch('/api/charts/countByLanguage')
                .then(response => {
                    if (!response.ok) {
                        throw new Error(`HTTP error! Status: ${response.status}`);
                    }
                    return response.json();
                })
                .then(data => {
                    if (!data.length) {
                        console.error("Помилка: API повернуло порожні дані.");
                        return;
                    }

                    const dataTable = new google.visualization.DataTable();
                    dataTable.addColumn('string', 'Мова');
                    dataTable.addColumn('number', 'Кількість');

                    data.forEach(item => {
                        dataTable.addRow([item.language, item.count]);
                    });

                    const options = {
                        title: 'Документи за мовами',
                        width: '100%',
                        height: 300,
                        chartArea: { width: '70%' },
                        hAxis: { title: 'Мова' },
                        vAxis: { title: 'Кількість' },
                        legend: { position: 'none' },
                        bar: { groupWidth: '70%' },
                        colors: ['#993300'],
                    };

                    const chart = new google.visualization.ColumnChart(document.getElementById('documentsByLanguageChart'));
                    chart.draw(dataTable, options);
                })
                .catch(error => console.error('Помилка запиту:', error));
        }
    </script>
}
